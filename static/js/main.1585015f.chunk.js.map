{"version":3,"sources":["components/BaseFunctions.js","components/ExtraFunctions.js","components/Numbers.js","App.js","reportWebVitals.js","index.js"],"names":["BaseFunctions","props","className","value","onClick","operation","clear","back","ExtraFunctions","extraFunctions","Numbers","numberPress","App","event","state","inputs","push","target","textContent","displayValue","setState","includes","console","log","prev","previousValue","current","result","Number","mode","Math","sin","PI","toFixed","cos","tan","sqrt","pow","E","backSpace","length","substring","this","react","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1585015f.chunk.js","sourcesContent":["const BaseFunctions = (props) => {\n  return (\n    <div className=\"baseFunctions\">\n      <button className=\"buttons\" value=\"divide\" onClick={props.operation}>\n        ÷\n      </button>\n      <button className=\"buttons word\" value=\"clear\" onClick={props.clear}>\n        Clear\n      </button>\n      <button className=\"buttons\" value=\"multiply\" onClick={props.operation}>\n        x\n      </button>\n      <button className=\"buttons word\" value=\"back\" onClick={props.back}>\n        Bkspc\n      </button>\n      <button className=\"buttons\" value=\"subtract\" onClick={props.operation}>\n        -\n      </button>\n      <div />\n      <button className=\"buttons\" value=\"add\" onClick={props.operation}>\n        +\n      </button>\n      <button className=\"buttons\" value=\"equal\" onClick={props.operation}>\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default BaseFunctions;\n","const ExtraFunctions = (props) => {\n  return (\n    <div className=\"extraFunctions\">\n      <button\n        className=\"buttons word\"\n        value=\"radians\"\n        onClick={props.extraFunctions}\n      >\n        RAD\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"degrees\"\n        onClick={props.extraFunctions}\n      >\n        DEG\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"sin\"\n        onClick={props.extraFunctions}\n      >\n        sin\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"cos\"\n        onClick={props.extraFunctions}\n      >\n        cos\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"tan\"\n        onClick={props.extraFunctions}\n      >\n        tan\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"inv\"\n        onClick={props.extraFunctions}\n      >\n        INV\n      </button>\n      <button\n        className=\"buttons\"\n        value=\"percent\"\n        onClick={props.extraFunctions}\n      >\n        %\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"ln\"\n        onClick={props.extraFunctions}\n      >\n        ln\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"log\"\n        onClick={props.extraFunctions}\n      >\n        log10\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"sqrt\"\n        onClick={props.extraFunctions}\n      >\n        √x\n      </button>\n      <button\n        className=\"buttons word\"\n        value=\"square\"\n        onClick={props.extraFunctions}\n      >\n        x²\n      </button>\n      <button\n        className=\"buttons\"\n        value=\"exponent\"\n        onClick={props.extraFunctions}\n      >\n        ^\n      </button>\n      <button className=\"buttons\" value=\"pi\" onClick={props.extraFunctions}>\n        π\n      </button>\n      <button className=\"buttons word\" value=\"e\" onClick={props.extraFunctions}>\n        e\n      </button>\n      {/* <button className=\"buttons\" value=\"\" onClick={props.extraFunctions}>\n        (\n      </button>\n      <button className=\"buttons\" value=\"\" onClick={props.extraFunctions}>\n        )\n      </button> */}\n      <button className=\"buttons\" value=\"sign\" onClick={props.extraFunctions}>\n        +/-\n      </button>\n    </div>\n  );\n};\n\nexport default ExtraFunctions;\n","const Numbers = (props) => {\n  return (\n    <div className=\"numpad\">\n      <button className=\"buttons\" value=\"7\" onClick={props.numberPress}>\n        7\n      </button>\n      <button className=\"buttons\" value=\"8\" onClick={props.numberPress}>\n        8\n      </button>\n      <button className=\"buttons\" value=\"9\" onClick={props.numberPress}>\n        9\n      </button>\n      <button className=\"buttons\" value=\"4\" onClick={props.numberPress}>\n        4\n      </button>\n      <button className=\"buttons\" value=\"5\" onClick={props.numberPress}>\n        5\n      </button>\n      <button className=\"buttons\" value=\"6\" onClick={props.numberPress}>\n        6\n      </button>\n      <button className=\"buttons\" value=\"1\" onClick={props.numberPress}>\n        1\n      </button>\n      <button className=\"buttons\" value=\"2\" onClick={props.numberPress}>\n        2\n      </button>\n      <button className=\"buttons\" value=\"3\" onClick={props.numberPress}>\n        3\n      </button>\n      <button className=\"buttons\" value=\"0\" onClick={props.numberPress}>\n        0\n      </button>\n      <button className=\"buttons\" value=\".\" onClick={props.numberPress}>\n        .\n      </button>\n    </div>\n  );\n};\n\nexport default Numbers;\n","import react from \"react\";\nimport \"./App.css\";\nimport BaseFunctions from \"./components/BaseFunctions\";\nimport ExtraFunctions from \"./components/ExtraFunctions\";\nimport Numbers from \"./components/Numbers\";\n\nclass App extends react.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayValue: \"0\",\n      previousValue: \"0\",\n      operation: \"\",\n      result: \"0\",\n      inputs: [],\n      mode: \"radians\",\n    };\n  }\n\n  numberPress = (event) => {\n    this.state.inputs.push(event.target.textContent);\n    if (this.state.displayValue === \"0\") {\n      if (event.target.value === \".\") {\n        this.setState({ displayValue: \"0.\" });\n      } else {\n        this.setState({ displayValue: event.target.value });\n      }\n    } else if (event.target.value === \".\") {\n      if (this.state.displayValue.includes(\".\")) {\n        console.log(\"already has a decimal\");\n      } else {\n        this.setState({\n          displayValue: this.state.displayValue + \".\",\n        });\n      }\n    } else {\n      this.setState({\n        displayValue: this.state.displayValue + event.target.value,\n      });\n    }\n  };\n\n  operation = (event) => {\n    const prev = this.state.previousValue;\n    let current = this.state.displayValue;\n    const operation = this.state.operation;\n    const result = this.state.result;\n    this.state.inputs.push(event.target.textContent);\n    if (result === \"0\") {\n      this.setState({\n        previousValue: Number(current),\n        displayValue: \"0\",\n        operation: event.target.value,\n        result: Number(current),\n      });\n    } else {\n      switch (event.target.value) {\n        case \"equal\":\n          console.log(this.state);\n          if (current === \"0\") {\n            current = prev;\n          }\n          switch (operation) {\n            case \"add\":\n              this.setState({\n                // previousValue: current,\n                result: Number(result) + Number(current),\n              });\n              break;\n            case \"subtract\":\n              this.setState({\n                result: Number(result) - Number(current),\n              });\n              break;\n            case \"multiply\":\n              this.setState({\n                result: Number(result) * Number(current),\n              });\n              break;\n            case \"divide\":\n              this.setState({\n                result: Number(result) / Number(current),\n              });\n              break;\n            default:\n          }\n          break;\n        case \"add\":\n          this.setState({\n            previousValue: current,\n            displayValue: \"0\",\n            operation: event.target.value,\n            result: Number(result) + Number(current),\n          });\n          break;\n        case \"subtract\":\n          this.setState({\n            previousValue: current,\n            displayValue: \"0\",\n            operation: event.target.value,\n            result: Number(result) - Number(current),\n          });\n          break;\n        case \"multiply\":\n          this.setState({\n            previousValue: current,\n            displayValue: \"0\",\n            operation: event.target.value,\n            result: Number(result) * Number(current),\n          });\n          break;\n        case \"divide\":\n          this.setState({\n            previousValue: current,\n            displayValue: \"0\",\n            operation: event.target.value,\n            result: Number(result) / Number(current),\n          });\n          break;\n        default:\n      }\n    }\n  };\n\n  extraFunctions = (event) => {\n    const current = Number(this.state.displayValue);\n    switch (event.target.value) {\n      case \"inv\":\n        this.setState({ displayValue: 1 / current });\n        break;\n      case \"radians\":\n        this.setState({ mode: \"radians\" });\n        break;\n      case \"degrees\":\n        this.setState({ mode: \"degrees\" });\n        break;\n      case \"sin\":\n        if (this.state.mode === \"radians\") {\n          this.setState({ displayValue: Math.sin(current) });\n        } else {\n          this.setState({\n            displayValue: Math.sin((current / 180) * Math.PI).toFixed(6),\n          });\n        }\n        break;\n      case \"cos\":\n        if (this.state.mode === \"radians\") {\n          this.setState({ displayValue: Math.cos(current) });\n        } else {\n          this.setState({\n            displayValue: Math.cos((current / 180) * Math.PI).toFixed(6),\n          });\n        }\n        break;\n      case \"tan\":\n        if (this.state.mode === \"radians\") {\n          this.setState({ displayValue: Math.tan(current) });\n        } else {\n          this.setState({\n            displayValue: Math.tan((current / 180) * Math.PI).toFixed(6),\n          });\n        }\n        break;\n      case \"percent\":\n        this.setState({ displayValue: current / 100 });\n        break;\n      case \"ln\":\n        this.setState({ displayValue: Math.log(current) });\n        break;\n      case \"log\":\n        this.setState({ displayValue: Math.log(current) / Math.log(10) });\n        break;\n      case \"sqrt\":\n        this.setState({ displayValue: Math.sqrt(current) });\n        break;\n      case \"square\":\n        this.setState({ displayValue: current * current });\n        break;\n      case \"exponent\":\n        this.setState({ result: Math.pow(this.state.result, current) });\n        break;\n      case \"pi\":\n        this.setState({ displayValue: Math.PI });\n        break;\n      case \"e\":\n        this.setState({ displayValue: Math.E });\n        break;\n      case \"sign\":\n        this.setState({ displayValue: current * -1 });\n        break;\n      default:\n    }\n  };\n\n  clear = () => {\n    if (this.state.displayValue === \"0\") {\n      //all clear\n      this.setState({\n        displayValue: \"0\",\n        previousValue: \"0\",\n        operation: \"\",\n        result: \"0\",\n      });\n    } else {\n      //display clear\n      this.setState({ displayValue: \"0\" });\n    }\n  };\n\n  backSpace = () => {\n    if (this.state.displayValue.length === 1) {\n      this.setState({ displayValue: \"0\" });\n    } else {\n      this.setState({\n        displayValue: this.state.displayValue.substring(\n          0,\n          this.state.displayValue.length - 1\n        ),\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>BZ Calculator App</h1>\n        <div className=\"display\">\n          <p className=\"resultDisplay\">{this.state.result}</p>\n          <p className=\"mode\">{this.state.mode}</p>\n          {/* <p className=\"inputs\">{this.state.inputs.join(\"\")}</p> */}\n          <p className=\"current\">{this.state.displayValue}</p>\n        </div>\n        <ExtraFunctions extraFunctions={this.extraFunctions} />\n        <div className=\"container\">\n          <Numbers numberPress={this.numberPress} />\n          <BaseFunctions\n            operation={this.operation}\n            clear={this.clear}\n            back={this.backSpace}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}